import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/icon";
var _c0 = ["fileInput"];
function MatFileUploadComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    var _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 6);
    i0.ɵɵlistener("click", function MatFileUploadComponent_button_7_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); var ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.uploadFiles(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("type", ctx_r1.uploadButtonType)("disabled", !ctx_r1.selectedFiles);
    i0.ɵɵattribute("aria-label", ctx_r1.uploadButtonText);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r1.uploadButtonText, " ");
} }
function MatFileUploadComponent_button_10_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-icon");
    i0.ɵɵtext(1, "close");
    i0.ɵɵelementEnd();
} }
function MatFileUploadComponent_button_10_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "mat-icon", 10);
} if (rf & 2) {
    var ctx_r6 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("svgIcon", ctx_r6.customSvgIcon);
} }
function MatFileUploadComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    var _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 7);
    i0.ɵɵlistener("click", function MatFileUploadComponent_button_10_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r8); var ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.filesChanged(null); });
    i0.ɵɵtemplate(1, MatFileUploadComponent_button_10_mat_icon_1_Template, 2, 0, "mat-icon", 8);
    i0.ɵɵtemplate(2, MatFileUploadComponent_button_10_mat_icon_2_Template, 1, 1, "mat-icon", 9);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r2.customSvgIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.customSvgIcon);
} }
var MatFileUploadComponent = /** @class */ (function () {
    function MatFileUploadComponent() {
        this.labelText = 'Select File(s)';
        this.selectButtonText = 'Select File(s)';
        this.selectFilesButtonType = 'button';
        this.uploadButtonText = 'Upload File(s)';
        this.uploadButtonType = 'button';
        this.allowMultipleFiles = false;
        this.showUploadButton = true;
        this.acceptedTypes = '*.*';
        this.customSvgIcon = null;
        this.uploadClicked = new EventEmitter();
        this.selectedFilesChanged = new EventEmitter();
        this.selectedFileText = '';
    }
    MatFileUploadComponent.prototype.filesChanged = function (files) {
        this.selectedFiles = files;
        this.selectedFilesChanged.emit(this.selectedFiles);
        if (this.selectedFiles) {
            var numSelectedFiles = this.selectedFiles.length;
            this.selectedFileText =
                numSelectedFiles === 1
                    ? this.selectedFiles[0].name
                    : numSelectedFiles + " files selected";
        }
        else {
            this.selectedFileText = '';
            this.resetFileInput();
        }
    };
    MatFileUploadComponent.prototype.uploadFiles = function () {
        this.uploadClicked.emit(this.selectedFiles);
        this.resetFileInput();
    };
    MatFileUploadComponent.prototype.resetFileInput = function () {
        this.fileInputRef.nativeElement.value = '';
    };
    MatFileUploadComponent.ɵfac = function MatFileUploadComponent_Factory(t) { return new (t || MatFileUploadComponent)(); };
    MatFileUploadComponent.ɵcmp = i0.ɵɵdefineComponent({ type: MatFileUploadComponent, selectors: [["mat-file-upload"]], viewQuery: function MatFileUploadComponent_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(_c0, true);
        } if (rf & 2) {
            var _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputRef = _t.first);
        } }, inputs: { labelText: "labelText", selectButtonText: "selectButtonText", selectFilesButtonType: "selectFilesButtonType", uploadButtonText: "uploadButtonText", uploadButtonType: "uploadButtonType", allowMultipleFiles: "allowMultipleFiles", showUploadButton: "showUploadButton", acceptedTypes: "acceptedTypes", customSvgIcon: "customSvgIcon" }, outputs: { uploadClicked: "uploadClicked", selectedFilesChanged: "selectedFilesChanged" }, decls: 11, vars: 9, consts: [[1, "file-input-text"], ["mat-button", "", "color", "primary", 1, "file-input-button", 3, "type", "click"], ["type", "file", 2, "display", "none", 3, "accept", "multiple", "change"], ["fileInput", ""], ["mat-raised-button", "", "color", "primary", "class", "file-input-button", 3, "type", "disabled", "click", 4, "ngIf"], ["mat-icon-button", "", "type", "button", "aria-label", "Remove Selected File(s)", 3, "click", 4, "ngIf"], ["mat-raised-button", "", "color", "primary", 1, "file-input-button", 3, "type", "disabled", "click"], ["mat-icon-button", "", "type", "button", "aria-label", "Remove Selected File(s)", 3, "click"], [4, "ngIf"], [3, "svgIcon", 4, "ngIf"], [3, "svgIcon"]], template: function MatFileUploadComponent_Template(rf, ctx) { if (rf & 1) {
            var _r9 = i0.ɵɵgetCurrentView();
            i0.ɵɵelementStart(0, "span", 0);
            i0.ɵɵtext(1);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(2, "button", 1);
            i0.ɵɵlistener("click", function MatFileUploadComponent_Template_button_click_2_listener() { i0.ɵɵrestoreView(_r9); var _r0 = i0.ɵɵreference(6); return _r0.click(); });
            i0.ɵɵelementStart(3, "span");
            i0.ɵɵtext(4);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(5, "input", 2, 3);
            i0.ɵɵlistener("change", function MatFileUploadComponent_Template_input_change_5_listener($event) { return ctx.filesChanged($event.target.files); });
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(7, MatFileUploadComponent_button_7_Template, 2, 4, "button", 4);
            i0.ɵɵelementStart(8, "span", 0);
            i0.ɵɵtext(9);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(10, MatFileUploadComponent_button_10_Template, 3, 2, "button", 5);
        } if (rf & 2) {
            i0.ɵɵadvance(1);
            i0.ɵɵtextInterpolate(ctx.labelText);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("type", ctx.selectFilesButtonType);
            i0.ɵɵattribute("aria-label", ctx.selectButtonText);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx.selectButtonText);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("accept", ctx.acceptedTypes)("multiple", ctx.allowMultipleFiles);
            i0.ɵɵadvance(2);
            i0.ɵɵproperty("ngIf", ctx.showUploadButton);
            i0.ɵɵadvance(2);
            i0.ɵɵtextInterpolate(ctx.selectedFileText);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.selectedFiles != null && ctx.selectedFiles.length > 0);
        } }, directives: [i1.MatButton, i2.NgIf, i3.MatIcon], styles: [".file-input-button[_ngcontent-%COMP%] { margin-right: 8px !important }", ".file-input-text[_ngcontent-%COMP%] { font-size: 14px !important; margin-right: 8px !important }"] });
    return MatFileUploadComponent;
}());
export { MatFileUploadComponent };
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(MatFileUploadComponent, [{
        type: Component,
        args: [{
                selector: 'mat-file-upload',
                template: "\n    <span class=\"file-input-text\">{{ labelText }}</span>\n    <button\n      mat-button\n      [type]=\"selectFilesButtonType\"\n      color=\"primary\"\n      class=\"file-input-button\"\n      (click)=\"fileInput.click()\"\n      [attr.aria-label]=\"selectButtonText\"\n    >\n      <span>{{ selectButtonText }}</span>\n      <input\n        #fileInput\n        type=\"file\"\n        style=\"display: none\"\n        [accept]=\"acceptedTypes\"\n        [multiple]=\"allowMultipleFiles\"\n        (change)=\"filesChanged($event.target.files)\"\n      />\n    </button>\n    <button\n      mat-raised-button\n      [type]=\"uploadButtonType\"\n      color=\"primary\"\n      class=\"file-input-button\"\n      [disabled]=\"!selectedFiles\"\n      (click)=\"uploadFiles()\"\n      *ngIf=\"showUploadButton\"\n      [attr.aria-label]=\"uploadButtonText\"\n    >\n      {{ uploadButtonText }}\n    </button>\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\n    <button\n      mat-icon-button\n      (click)=\"filesChanged(null)\"\n      type=\"button\"\n      aria-label=\"Remove Selected File(s)\"\n       *ngIf=\"selectedFiles != null && selectedFiles.length > 0\"\n    >\n        <mat-icon *ngIf=\"!customSvgIcon\">close</mat-icon>\n        <mat-icon *ngIf=\"customSvgIcon\" [svgIcon]=\"customSvgIcon\"></mat-icon>\n    </button>\n  ",
                styles: [
                    '.file-input-button { margin-right: 8px !important }',
                    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }',
                ],
            }]
    }], null, { labelText: [{
            type: Input
        }], selectButtonText: [{
            type: Input
        }], selectFilesButtonType: [{
            type: Input
        }], uploadButtonText: [{
            type: Input
        }], uploadButtonType: [{
            type: Input
        }], allowMultipleFiles: [{
            type: Input
        }], showUploadButton: [{
            type: Input
        }], acceptedTypes: [{
            type: Input
        }], customSvgIcon: [{
            type: Input
        }], uploadClicked: [{
            type: Output
        }], selectedFilesChanged: [{
            type: Output
        }], fileInputRef: [{
            type: ViewChild,
            args: ['fileInput']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWZpbGUtdXBsb2FkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdC1maWxlLXVwbG9hZC8iLCJzb3VyY2VzIjpbImxpYi9tYXQtZmlsZS11cGxvYWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQTs7Ozs7Ozs7SUF3QmxCLGlDQVVFO0lBSkEsNExBQXVCO0lBSXZCLFlBQ0Y7SUFBQSxpQkFBUzs7O0lBVFAsOENBQXlCLG1DQUFBO0lBTXpCLHFEQUFvQztJQUVwQyxlQUNGO0lBREUsd0RBQ0Y7OztJQVNJLGdDQUFpQztJQUFBLHFCQUFLO0lBQUEsaUJBQVc7OztJQUNqRCwrQkFBcUU7OztJQUFyQyw4Q0FBeUI7Ozs7SUFSN0QsaUNBT0k7SUFMRix5TEFBc0IsSUFBSSxLQUFFO0lBSzFCLDJGQUFpQztJQUNqQywyRkFBMEQ7SUFDOUQsaUJBQVM7OztJQUZLLGVBQXNCO0lBQXRCLDRDQUFzQjtJQUN0QixlQUFxQjtJQUFyQiwyQ0FBcUI7O0FBM0N2QztJQUFBO1FBb0RXLGNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztRQUM3QixxQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUNwQywwQkFBcUIsR0FBMkMsUUFBUSxDQUFDO1FBQ3pFLHFCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3BDLHFCQUFnQixHQUEyQyxRQUFRLENBQUM7UUFDcEUsdUJBQWtCLEdBQUcsS0FBSyxDQUFDO1FBQzNCLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUN4QixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0QixrQkFBYSxHQUFZLElBQUksQ0FBQztRQUM3QixrQkFBYSxHQUEyQixJQUFJLFlBQVksRUFBWSxDQUFDO1FBQ3JFLHlCQUFvQixHQUEyQixJQUFJLFlBQVksRUFBWSxDQUFDO1FBSXRGLHFCQUFnQixHQUFHLEVBQUUsQ0FBQztLQXlCdkI7SUF2QkMsNkNBQVksR0FBWixVQUFhLEtBQWdCO1FBQzNCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFBO1FBQzFCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBQ2xELElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN0QixJQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFBO1lBQ2xELElBQUksQ0FBQyxnQkFBZ0I7Z0JBQ25CLGdCQUFnQixLQUFLLENBQUM7b0JBQ3BCLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk7b0JBQzVCLENBQUMsQ0FBSSxnQkFBZ0Isb0JBQWlCLENBQUE7U0FDM0M7YUFBTTtZQUNMLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLENBQUE7WUFDMUIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFBO1NBQ3RCO0lBQ0gsQ0FBQztJQUVELDRDQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUE7UUFDM0MsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFBO0lBQ3ZCLENBQUM7SUFFRCwrQ0FBYyxHQUFkO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQTtJQUM1QyxDQUFDO2dHQXZDVSxzQkFBc0I7K0RBQXRCLHNCQUFzQjs7Ozs7OztZQWhEL0IsK0JBQThCO1lBQUEsWUFBZTtZQUFBLGlCQUFPO1lBQ3BELGlDQVFFO1lBSEEsdUpBQVMsV0FBaUIsSUFBQztZQUczQiw0QkFBTTtZQUFBLFlBQXNCO1lBQUEsaUJBQU87WUFDbkMsbUNBUUY7WUFGSSwwR0FBVSxxQ0FBaUMsSUFBQztZQU45QyxpQkFRRjtZQUFBLGlCQUFTO1lBQ1QsNkVBVUU7WUFFRiwrQkFBOEI7WUFBQSxZQUFzQjtZQUFBLGlCQUFPO1lBQzNELCtFQU9JOztZQXZDMEIsZUFBZTtZQUFmLG1DQUFlO1lBRzNDLGVBQThCO1lBQTlCLGdEQUE4QjtZQUk5QixrREFBb0M7WUFFOUIsZUFBc0I7WUFBdEIsMENBQXNCO1lBSzFCLGVBQXdCO1lBQXhCLDBDQUF3QixvQ0FBQTtZQVkxQixlQUF3QjtZQUF4QiwyQ0FBd0I7WUFLSSxlQUFzQjtZQUF0QiwwQ0FBc0I7WUFNakQsZUFBeUQ7WUFBekQsZ0ZBQXlEOztpQ0FqRGhFO0NBb0dDLEFBM0ZELElBMkZDO1NBeENZLHNCQUFzQjtrREFBdEIsc0JBQXNCO2NBbkRsQyxTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFLCswQ0EyQ1Q7Z0JBQ0QsTUFBTSxFQUFFO29CQUNOLHFEQUFxRDtvQkFDckQsK0VBQStFO2lCQUNoRjthQUNGOztrQkFFRSxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxLQUFLOztrQkFDTCxNQUFNOztrQkFDTixNQUFNOztrQkFFTixTQUFTO21CQUFDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIENvbXBvbmVudCxcclxuICBFbGVtZW50UmVmLFxyXG4gIEV2ZW50RW1pdHRlcixcclxuICBJbnB1dCxcclxuICBPdXRwdXQsXHJcbiAgVmlld0NoaWxkLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnXHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ21hdC1maWxlLXVwbG9hZCcsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxzcGFuIGNsYXNzPVwiZmlsZS1pbnB1dC10ZXh0XCI+e3sgbGFiZWxUZXh0IH19PC9zcGFuPlxyXG4gICAgPGJ1dHRvblxyXG4gICAgICBtYXQtYnV0dG9uXHJcbiAgICAgIFt0eXBlXT1cInNlbGVjdEZpbGVzQnV0dG9uVHlwZVwiXHJcbiAgICAgIGNvbG9yPVwicHJpbWFyeVwiXHJcbiAgICAgIGNsYXNzPVwiZmlsZS1pbnB1dC1idXR0b25cIlxyXG4gICAgICAoY2xpY2spPVwiZmlsZUlucHV0LmNsaWNrKClcIlxyXG4gICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cInNlbGVjdEJ1dHRvblRleHRcIlxyXG4gICAgPlxyXG4gICAgICA8c3Bhbj57eyBzZWxlY3RCdXR0b25UZXh0IH19PC9zcGFuPlxyXG4gICAgICA8aW5wdXRcclxuICAgICAgICAjZmlsZUlucHV0XHJcbiAgICAgICAgdHlwZT1cImZpbGVcIlxyXG4gICAgICAgIHN0eWxlPVwiZGlzcGxheTogbm9uZVwiXHJcbiAgICAgICAgW2FjY2VwdF09XCJhY2NlcHRlZFR5cGVzXCJcclxuICAgICAgICBbbXVsdGlwbGVdPVwiYWxsb3dNdWx0aXBsZUZpbGVzXCJcclxuICAgICAgICAoY2hhbmdlKT1cImZpbGVzQ2hhbmdlZCgkZXZlbnQudGFyZ2V0LmZpbGVzKVwiXHJcbiAgICAgIC8+XHJcbiAgICA8L2J1dHRvbj5cclxuICAgIDxidXR0b25cclxuICAgICAgbWF0LXJhaXNlZC1idXR0b25cclxuICAgICAgW3R5cGVdPVwidXBsb2FkQnV0dG9uVHlwZVwiXHJcbiAgICAgIGNvbG9yPVwicHJpbWFyeVwiXHJcbiAgICAgIGNsYXNzPVwiZmlsZS1pbnB1dC1idXR0b25cIlxyXG4gICAgICBbZGlzYWJsZWRdPVwiIXNlbGVjdGVkRmlsZXNcIlxyXG4gICAgICAoY2xpY2spPVwidXBsb2FkRmlsZXMoKVwiXHJcbiAgICAgICpuZ0lmPVwic2hvd1VwbG9hZEJ1dHRvblwiXHJcbiAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwidXBsb2FkQnV0dG9uVGV4dFwiXHJcbiAgICA+XHJcbiAgICAgIHt7IHVwbG9hZEJ1dHRvblRleHQgfX1cclxuICAgIDwvYnV0dG9uPlxyXG4gICAgPHNwYW4gY2xhc3M9XCJmaWxlLWlucHV0LXRleHRcIj57eyBzZWxlY3RlZEZpbGVUZXh0IH19PC9zcGFuPlxyXG4gICAgPGJ1dHRvblxyXG4gICAgICBtYXQtaWNvbi1idXR0b25cclxuICAgICAgKGNsaWNrKT1cImZpbGVzQ2hhbmdlZChudWxsKVwiXHJcbiAgICAgIHR5cGU9XCJidXR0b25cIlxyXG4gICAgICBhcmlhLWxhYmVsPVwiUmVtb3ZlIFNlbGVjdGVkIEZpbGUocylcIlxyXG4gICAgICAgKm5nSWY9XCJzZWxlY3RlZEZpbGVzICE9IG51bGwgJiYgc2VsZWN0ZWRGaWxlcy5sZW5ndGggPiAwXCJcclxuICAgID5cclxuICAgICAgICA8bWF0LWljb24gKm5nSWY9XCIhY3VzdG9tU3ZnSWNvblwiPmNsb3NlPC9tYXQtaWNvbj5cclxuICAgICAgICA8bWF0LWljb24gKm5nSWY9XCJjdXN0b21TdmdJY29uXCIgW3N2Z0ljb25dPVwiY3VzdG9tU3ZnSWNvblwiPjwvbWF0LWljb24+XHJcbiAgICA8L2J1dHRvbj5cclxuICBgLFxyXG4gIHN0eWxlczogW1xyXG4gICAgJy5maWxlLWlucHV0LWJ1dHRvbiB7IG1hcmdpbi1yaWdodDogOHB4ICFpbXBvcnRhbnQgfScsXHJcbiAgICAnLmZpbGUtaW5wdXQtdGV4dCB7IGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50OyBtYXJnaW4tcmlnaHQ6IDhweCAhaW1wb3J0YW50IH0nLFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNYXRGaWxlVXBsb2FkQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBsYWJlbFRleHQgPSAnU2VsZWN0IEZpbGUocyknO1xyXG4gIEBJbnB1dCgpIHNlbGVjdEJ1dHRvblRleHQgPSAnU2VsZWN0IEZpbGUocyknO1xyXG4gIEBJbnB1dCgpIHNlbGVjdEZpbGVzQnV0dG9uVHlwZTogJ2J1dHRvbicgfCAnbWVudScgfCAncmVzZXQnIHwgJ3N1Ym1pdCcgPSAnYnV0dG9uJztcclxuICBASW5wdXQoKSB1cGxvYWRCdXR0b25UZXh0ID0gJ1VwbG9hZCBGaWxlKHMpJztcclxuICBASW5wdXQoKSB1cGxvYWRCdXR0b25UeXBlOiAnYnV0dG9uJyB8ICdtZW51JyB8ICdyZXNldCcgfCAnc3VibWl0JyA9ICdidXR0b24nO1xyXG4gIEBJbnB1dCgpIGFsbG93TXVsdGlwbGVGaWxlcyA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIHNob3dVcGxvYWRCdXR0b24gPSB0cnVlO1xyXG4gIEBJbnB1dCgpIGFjY2VwdGVkVHlwZXMgPSAnKi4qJztcclxuICBASW5wdXQoKSBjdXN0b21TdmdJY29uPzogc3RyaW5nID0gbnVsbDtcclxuICBAT3V0cHV0KCkgdXBsb2FkQ2xpY2tlZDogRXZlbnRFbWl0dGVyPEZpbGVMaXN0PiA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZUxpc3Q+KCk7XHJcbiAgQE91dHB1dCgpIHNlbGVjdGVkRmlsZXNDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8RmlsZUxpc3Q+ID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlTGlzdD4oKTtcclxuXHJcbiAgQFZpZXdDaGlsZCgnZmlsZUlucHV0JykgZmlsZUlucHV0UmVmOiBFbGVtZW50UmVmXHJcbiAgc2VsZWN0ZWRGaWxlczogRmlsZUxpc3Q7XHJcbiAgc2VsZWN0ZWRGaWxlVGV4dCA9ICcnO1xyXG5cclxuICBmaWxlc0NoYW5nZWQoZmlsZXM/OiBGaWxlTGlzdCk6IHZvaWQge1xyXG4gICAgdGhpcy5zZWxlY3RlZEZpbGVzID0gZmlsZXNcclxuICAgIHRoaXMuc2VsZWN0ZWRGaWxlc0NoYW5nZWQuZW1pdCh0aGlzLnNlbGVjdGVkRmlsZXMpXHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZEZpbGVzKSB7XHJcbiAgICAgIGNvbnN0IG51bVNlbGVjdGVkRmlsZXMgPSB0aGlzLnNlbGVjdGVkRmlsZXMubGVuZ3RoXHJcbiAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlVGV4dCA9XHJcbiAgICAgICAgbnVtU2VsZWN0ZWRGaWxlcyA9PT0gMVxyXG4gICAgICAgICAgPyB0aGlzLnNlbGVjdGVkRmlsZXNbMF0ubmFtZVxyXG4gICAgICAgICAgOiBgJHtudW1TZWxlY3RlZEZpbGVzfSBmaWxlcyBzZWxlY3RlZGBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlVGV4dCA9ICcnXHJcbiAgICAgIHRoaXMucmVzZXRGaWxlSW5wdXQoKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBsb2FkRmlsZXMoKTogdm9pZCB7XHJcbiAgICB0aGlzLnVwbG9hZENsaWNrZWQuZW1pdCh0aGlzLnNlbGVjdGVkRmlsZXMpXHJcbiAgICB0aGlzLnJlc2V0RmlsZUlucHV0KClcclxuICB9XHJcblxyXG4gIHJlc2V0RmlsZUlucHV0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5maWxlSW5wdXRSZWYubmF0aXZlRWxlbWVudC52YWx1ZSA9ICcnXHJcbiAgfVxyXG59XHJcbiJdfQ==
{"version":3,"sources":["ng://mat-file-upload/lib/mat-file-upload.service.ts","ng://mat-file-upload/lib/mat-file-upload.component.ts","ng://mat-file-upload/lib/mat-file-upload.module.ts"],"names":["MatFileUploadService","factory","ɵfac","providedIn","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","ctx_r1","selectedFiles","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelement","i0.ɵɵtemplate","MatFileUploadComponent","this","labelText","selectButtonText","selectFilesButtonType","uploadButtonText","uploadButtonType","allowMultipleFiles","showUploadButton","acceptedTypes","customSvgIcon","uploadClicked","EventEmitter","selectedFilesChanged","selectedFileText","prototype","filesChanged","files","emit","numSelectedFiles","length","name","resetFileInput","uploadFiles","fileInputRef","nativeElement","value","selectors","viewQuery","rf","ctx","click","$event","target","i0.ɵɵtextInterpolate","MatFileUploadModule","imports","CommonModule","MatButtonModule","MatIconModule","MatInputModule","MatSelectModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatFileUploadService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'mat-file-upload',\r\n  template: `\r\n    <span class=\"file-input-text\">{{ labelText }}</span>\r\n    <button\r\n      mat-button\r\n      [type]=\"selectFilesButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      (click)=\"fileInput.click()\"\r\n      [attr.aria-label]=\"selectButtonText\"\r\n    >\r\n      <span>{{ selectButtonText }}</span>\r\n      <input\r\n        #fileInput\r\n        type=\"file\"\r\n        style=\"display: none\"\r\n        [accept]=\"acceptedTypes\"\r\n        [multiple]=\"allowMultipleFiles\"\r\n        (change)=\"filesChanged($event.target.files)\"\r\n      />\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [type]=\"uploadButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      [disabled]=\"!selectedFiles\"\r\n      (click)=\"uploadFiles()\"\r\n      *ngIf=\"showUploadButton\"\r\n      [attr.aria-label]=\"uploadButtonText\"\r\n    >\r\n      {{ uploadButtonText }}\r\n    </button>\r\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"filesChanged(null)\"\r\n      type=\"button\"\r\n      aria-label=\"Remove Selected File(s)\"\r\n       *ngIf=\"selectedFiles != null && selectedFiles.length > 0\"\r\n    >\r\n        <mat-icon *ngIf=\"!customSvgIcon\">close</mat-icon>\r\n        <mat-icon *ngIf=\"customSvgIcon\" [svgIcon]=\"customSvgIcon\"></mat-icon>\r\n    </button>\r\n  `,\r\n  styles: [\r\n    '.file-input-button { margin-right: 8px !important }',\r\n    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }',\r\n  ],\r\n})\r\nexport class MatFileUploadComponent {\r\n  @Input() labelText = 'Select File(s)';\r\n  @Input() selectButtonText = 'Select File(s)';\r\n  @Input() selectFilesButtonType: 'button' | 'menu' | 'reset' | 'submit' = 'button';\r\n  @Input() uploadButtonText = 'Upload File(s)';\r\n  @Input() uploadButtonType: 'button' | 'menu' | 'reset' | 'submit' = 'button';\r\n  @Input() allowMultipleFiles = false;\r\n  @Input() showUploadButton = true;\r\n  @Input() acceptedTypes = '*.*';\r\n  @Input() customSvgIcon?: string = null;\r\n  @Output() uploadClicked: EventEmitter<FileList> = new EventEmitter<FileList>();\r\n  @Output() selectedFilesChanged: EventEmitter<FileList> = new EventEmitter<FileList>();\r\n\r\n  @ViewChild('fileInput') fileInputRef: ElementRef\r\n  selectedFiles: FileList;\r\n  selectedFileText = '';\r\n\r\n  filesChanged(files?: FileList): void {\r\n    this.selectedFiles = files\r\n    this.selectedFilesChanged.emit(this.selectedFiles)\r\n    if (this.selectedFiles) {\r\n      const numSelectedFiles = this.selectedFiles.length\r\n      this.selectedFileText =\r\n        numSelectedFiles === 1\r\n          ? this.selectedFiles[0].name\r\n          : `${numSelectedFiles} files selected`\r\n    } else {\r\n      this.selectedFileText = ''\r\n      this.resetFileInput()\r\n    }\r\n  }\r\n\r\n  uploadFiles(): void {\r\n    this.uploadClicked.emit(this.selectedFiles)\r\n    this.resetFileInput()\r\n  }\r\n\r\n  resetFileInput(): void {\r\n    this.fileInputRef.nativeElement.value = ''\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatSelectModule } from '@angular/material/select'\r\n\r\nimport { MatFileUploadComponent } from './mat-file-upload.component'\r\n\r\n@NgModule({\r\n  declarations: [MatFileUploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [MatFileUploadComponent],\r\n})\r\nexport class MatFileUploadModule {}\r\n"]}
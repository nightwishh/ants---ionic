{"version":3,"file":"mat-file-upload.js","sources":["ng://mat-file-upload/lib/mat-file-upload.service.ts","ng://mat-file-upload/lib/mat-file-upload.component.ts","ng://mat-file-upload/lib/mat-file-upload.module.ts","ng://mat-file-upload/public-api.ts","ng://mat-file-upload/mat-file-upload.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatFileUploadService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'mat-file-upload',\r\n  template: `\r\n    <span class=\"file-input-text\">{{ labelText }}</span>\r\n    <button\r\n      mat-button\r\n      [type]=\"selectFilesButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      (click)=\"fileInput.click()\"\r\n      [attr.aria-label]=\"selectButtonText\"\r\n    >\r\n      <span>{{ selectButtonText }}</span>\r\n      <input\r\n        #fileInput\r\n        type=\"file\"\r\n        style=\"display: none\"\r\n        [accept]=\"acceptedTypes\"\r\n        [multiple]=\"allowMultipleFiles\"\r\n        (change)=\"filesChanged($event.target.files)\"\r\n      />\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      [type]=\"uploadButtonType\"\r\n      color=\"primary\"\r\n      class=\"file-input-button\"\r\n      [disabled]=\"!selectedFiles\"\r\n      (click)=\"uploadFiles()\"\r\n      *ngIf=\"showUploadButton\"\r\n      [attr.aria-label]=\"uploadButtonText\"\r\n    >\r\n      {{ uploadButtonText }}\r\n    </button>\r\n    <span class=\"file-input-text\">{{ selectedFileText }}</span>\r\n    <button\r\n      mat-icon-button\r\n      (click)=\"filesChanged(null)\"\r\n      type=\"button\"\r\n      aria-label=\"Remove Selected File(s)\"\r\n       *ngIf=\"selectedFiles != null && selectedFiles.length > 0\"\r\n    >\r\n        <mat-icon *ngIf=\"!customSvgIcon\">close</mat-icon>\r\n        <mat-icon *ngIf=\"customSvgIcon\" [svgIcon]=\"customSvgIcon\"></mat-icon>\r\n    </button>\r\n  `,\r\n  styles: [\r\n    '.file-input-button { margin-right: 8px !important }',\r\n    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }',\r\n  ],\r\n})\r\nexport class MatFileUploadComponent {\r\n  @Input() labelText = 'Select File(s)';\r\n  @Input() selectButtonText = 'Select File(s)';\r\n  @Input() selectFilesButtonType: 'button' | 'menu' | 'reset' | 'submit' = 'button';\r\n  @Input() uploadButtonText = 'Upload File(s)';\r\n  @Input() uploadButtonType: 'button' | 'menu' | 'reset' | 'submit' = 'button';\r\n  @Input() allowMultipleFiles = false;\r\n  @Input() showUploadButton = true;\r\n  @Input() acceptedTypes = '*.*';\r\n  @Input() customSvgIcon?: string = null;\r\n  @Output() uploadClicked: EventEmitter<FileList> = new EventEmitter<FileList>();\r\n  @Output() selectedFilesChanged: EventEmitter<FileList> = new EventEmitter<FileList>();\r\n\r\n  @ViewChild('fileInput') fileInputRef: ElementRef\r\n  selectedFiles: FileList;\r\n  selectedFileText = '';\r\n\r\n  filesChanged(files?: FileList): void {\r\n    this.selectedFiles = files\r\n    this.selectedFilesChanged.emit(this.selectedFiles)\r\n    if (this.selectedFiles) {\r\n      const numSelectedFiles = this.selectedFiles.length\r\n      this.selectedFileText =\r\n        numSelectedFiles === 1\r\n          ? this.selectedFiles[0].name\r\n          : `${numSelectedFiles} files selected`\r\n    } else {\r\n      this.selectedFileText = ''\r\n      this.resetFileInput()\r\n    }\r\n  }\r\n\r\n  uploadFiles(): void {\r\n    this.uploadClicked.emit(this.selectedFiles)\r\n    this.resetFileInput()\r\n  }\r\n\r\n  resetFileInput(): void {\r\n    this.fileInputRef.nativeElement.value = ''\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatSelectModule } from '@angular/material/select'\r\n\r\nimport { MatFileUploadComponent } from './mat-file-upload.component'\r\n\r\n@NgModule({\r\n  declarations: [MatFileUploadComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n  ],\r\n  exports: [MatFileUploadComponent],\r\n})\r\nexport class MatFileUploadModule {}\r\n","/*\r\n * Public API Surface of mat-file-upload\r\n */\r\n\r\nexport * from './lib/mat-file-upload.service';\r\nexport * from './lib/mat-file-upload.component';\r\nexport * from './lib/mat-file-upload.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵtextInterpolate"],"mappings":"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"}
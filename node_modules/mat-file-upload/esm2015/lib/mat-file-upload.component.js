import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/icon";
const _c0 = ["fileInput"];
function MatFileUploadComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r4 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 6);
    i0.ɵɵlistener("click", function MatFileUploadComponent_button_7_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.uploadFiles(); });
    i0.ɵɵtext(1);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵproperty("type", ctx_r1.uploadButtonType)("disabled", !ctx_r1.selectedFiles);
    i0.ɵɵattribute("aria-label", ctx_r1.uploadButtonText);
    i0.ɵɵadvance(1);
    i0.ɵɵtextInterpolate1(" ", ctx_r1.uploadButtonText, " ");
} }
function MatFileUploadComponent_button_10_mat_icon_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "mat-icon");
    i0.ɵɵtext(1, "close");
    i0.ɵɵelementEnd();
} }
function MatFileUploadComponent_button_10_mat_icon_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "mat-icon", 10);
} if (rf & 2) {
    const ctx_r6 = i0.ɵɵnextContext(2);
    i0.ɵɵproperty("svgIcon", ctx_r6.customSvgIcon);
} }
function MatFileUploadComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r8 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "button", 7);
    i0.ɵɵlistener("click", function MatFileUploadComponent_button_10_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r8); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.filesChanged(null); });
    i0.ɵɵtemplate(1, MatFileUploadComponent_button_10_mat_icon_1_Template, 2, 0, "mat-icon", 8);
    i0.ɵɵtemplate(2, MatFileUploadComponent_button_10_mat_icon_2_Template, 1, 1, "mat-icon", 9);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", !ctx_r2.customSvgIcon);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", ctx_r2.customSvgIcon);
} }
export class MatFileUploadComponent {
    constructor() {
        this.labelText = 'Select File(s)';
        this.selectButtonText = 'Select File(s)';
        this.selectFilesButtonType = 'button';
        this.uploadButtonText = 'Upload File(s)';
        this.uploadButtonType = 'button';
        this.allowMultipleFiles = false;
        this.showUploadButton = true;
        this.acceptedTypes = '*.*';
        this.customSvgIcon = null;
        this.uploadClicked = new EventEmitter();
        this.selectedFilesChanged = new EventEmitter();
        this.selectedFileText = '';
    }
    filesChanged(files) {
        this.selectedFiles = files;
        this.selectedFilesChanged.emit(this.selectedFiles);
        if (this.selectedFiles) {
            const numSelectedFiles = this.selectedFiles.length;
            this.selectedFileText =
                numSelectedFiles === 1
                    ? this.selectedFiles[0].name
                    : `${numSelectedFiles} files selected`;
        }
        else {
            this.selectedFileText = '';
            this.resetFileInput();
        }
    }
    uploadFiles() {
        this.uploadClicked.emit(this.selectedFiles);
        this.resetFileInput();
    }
    resetFileInput() {
        this.fileInputRef.nativeElement.value = '';
    }
}
MatFileUploadComponent.ɵfac = function MatFileUploadComponent_Factory(t) { return new (t || MatFileUploadComponent)(); };
MatFileUploadComponent.ɵcmp = i0.ɵɵdefineComponent({ type: MatFileUploadComponent, selectors: [["mat-file-upload"]], viewQuery: function MatFileUploadComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInputRef = _t.first);
    } }, inputs: { labelText: "labelText", selectButtonText: "selectButtonText", selectFilesButtonType: "selectFilesButtonType", uploadButtonText: "uploadButtonText", uploadButtonType: "uploadButtonType", allowMultipleFiles: "allowMultipleFiles", showUploadButton: "showUploadButton", acceptedTypes: "acceptedTypes", customSvgIcon: "customSvgIcon" }, outputs: { uploadClicked: "uploadClicked", selectedFilesChanged: "selectedFilesChanged" }, decls: 11, vars: 9, consts: [[1, "file-input-text"], ["mat-button", "", "color", "primary", 1, "file-input-button", 3, "type", "click"], ["type", "file", 2, "display", "none", 3, "accept", "multiple", "change"], ["fileInput", ""], ["mat-raised-button", "", "color", "primary", "class", "file-input-button", 3, "type", "disabled", "click", 4, "ngIf"], ["mat-icon-button", "", "type", "button", "aria-label", "Remove Selected File(s)", 3, "click", 4, "ngIf"], ["mat-raised-button", "", "color", "primary", 1, "file-input-button", 3, "type", "disabled", "click"], ["mat-icon-button", "", "type", "button", "aria-label", "Remove Selected File(s)", 3, "click"], [4, "ngIf"], [3, "svgIcon", 4, "ngIf"], [3, "svgIcon"]], template: function MatFileUploadComponent_Template(rf, ctx) { if (rf & 1) {
        const _r9 = i0.ɵɵgetCurrentView();
        i0.ɵɵelementStart(0, "span", 0);
        i0.ɵɵtext(1);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(2, "button", 1);
        i0.ɵɵlistener("click", function MatFileUploadComponent_Template_button_click_2_listener() { i0.ɵɵrestoreView(_r9); const _r0 = i0.ɵɵreference(6); return _r0.click(); });
        i0.ɵɵelementStart(3, "span");
        i0.ɵɵtext(4);
        i0.ɵɵelementEnd();
        i0.ɵɵelementStart(5, "input", 2, 3);
        i0.ɵɵlistener("change", function MatFileUploadComponent_Template_input_change_5_listener($event) { return ctx.filesChanged($event.target.files); });
        i0.ɵɵelementEnd();
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(7, MatFileUploadComponent_button_7_Template, 2, 4, "button", 4);
        i0.ɵɵelementStart(8, "span", 0);
        i0.ɵɵtext(9);
        i0.ɵɵelementEnd();
        i0.ɵɵtemplate(10, MatFileUploadComponent_button_10_Template, 3, 2, "button", 5);
    } if (rf & 2) {
        i0.ɵɵadvance(1);
        i0.ɵɵtextInterpolate(ctx.labelText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("type", ctx.selectFilesButtonType);
        i0.ɵɵattribute("aria-label", ctx.selectButtonText);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx.selectButtonText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("accept", ctx.acceptedTypes)("multiple", ctx.allowMultipleFiles);
        i0.ɵɵadvance(2);
        i0.ɵɵproperty("ngIf", ctx.showUploadButton);
        i0.ɵɵadvance(2);
        i0.ɵɵtextInterpolate(ctx.selectedFileText);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.selectedFiles != null && ctx.selectedFiles.length > 0);
    } }, directives: [i1.MatButton, i2.NgIf, i3.MatIcon], styles: [".file-input-button[_ngcontent-%COMP%] { margin-right: 8px !important }", ".file-input-text[_ngcontent-%COMP%] { font-size: 14px !important; margin-right: 8px !important }"] });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(MatFileUploadComponent, [{
        type: Component,
        args: [{
                selector: 'mat-file-upload',
                template: `
    <span class="file-input-text">{{ labelText }}</span>
    <button
      mat-button
      [type]="selectFilesButtonType"
      color="primary"
      class="file-input-button"
      (click)="fileInput.click()"
      [attr.aria-label]="selectButtonText"
    >
      <span>{{ selectButtonText }}</span>
      <input
        #fileInput
        type="file"
        style="display: none"
        [accept]="acceptedTypes"
        [multiple]="allowMultipleFiles"
        (change)="filesChanged($event.target.files)"
      />
    </button>
    <button
      mat-raised-button
      [type]="uploadButtonType"
      color="primary"
      class="file-input-button"
      [disabled]="!selectedFiles"
      (click)="uploadFiles()"
      *ngIf="showUploadButton"
      [attr.aria-label]="uploadButtonText"
    >
      {{ uploadButtonText }}
    </button>
    <span class="file-input-text">{{ selectedFileText }}</span>
    <button
      mat-icon-button
      (click)="filesChanged(null)"
      type="button"
      aria-label="Remove Selected File(s)"
       *ngIf="selectedFiles != null && selectedFiles.length > 0"
    >
        <mat-icon *ngIf="!customSvgIcon">close</mat-icon>
        <mat-icon *ngIf="customSvgIcon" [svgIcon]="customSvgIcon"></mat-icon>
    </button>
  `,
                styles: [
                    '.file-input-button { margin-right: 8px !important }',
                    '.file-input-text { font-size: 14px !important; margin-right: 8px !important }',
                ],
            }]
    }], null, { labelText: [{
            type: Input
        }], selectButtonText: [{
            type: Input
        }], selectFilesButtonType: [{
            type: Input
        }], uploadButtonText: [{
            type: Input
        }], uploadButtonType: [{
            type: Input
        }], allowMultipleFiles: [{
            type: Input
        }], showUploadButton: [{
            type: Input
        }], acceptedTypes: [{
            type: Input
        }], customSvgIcon: [{
            type: Input
        }], uploadClicked: [{
            type: Output
        }], selectedFilesChanged: [{
            type: Output
        }], fileInputRef: [{
            type: ViewChild,
            args: ['fileInput']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWZpbGUtdXBsb2FkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdC1maWxlLXVwbG9hZC8iLCJzb3VyY2VzIjpbImxpYi9tYXQtZmlsZS11cGxvYWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQTs7Ozs7Ozs7SUF3QmxCLGlDQVVFO0lBSkEsOExBQXVCO0lBSXZCLFlBQ0Y7SUFBQSxpQkFBUzs7O0lBVFAsOENBQXlCLG1DQUFBO0lBTXpCLHFEQUFvQztJQUVwQyxlQUNGO0lBREUsd0RBQ0Y7OztJQVNJLGdDQUFpQztJQUFBLHFCQUFLO0lBQUEsaUJBQVc7OztJQUNqRCwrQkFBcUU7OztJQUFyQyw4Q0FBeUI7Ozs7SUFSN0QsaUNBT0k7SUFMRiwyTEFBc0IsSUFBSSxLQUFFO0lBSzFCLDJGQUFpQztJQUNqQywyRkFBMEQ7SUFDOUQsaUJBQVM7OztJQUZLLGVBQXNCO0lBQXRCLDRDQUFzQjtJQUN0QixlQUFxQjtJQUFyQiwyQ0FBcUI7O0FBUXZDLE1BQU0sT0FBTyxzQkFBc0I7SUFuRG5DO1FBb0RXLGNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztRQUM3QixxQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUNwQywwQkFBcUIsR0FBMkMsUUFBUSxDQUFDO1FBQ3pFLHFCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3BDLHFCQUFnQixHQUEyQyxRQUFRLENBQUM7UUFDcEUsdUJBQWtCLEdBQUcsS0FBSyxDQUFDO1FBQzNCLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUN4QixrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0QixrQkFBYSxHQUFZLElBQUksQ0FBQztRQUM3QixrQkFBYSxHQUEyQixJQUFJLFlBQVksRUFBWSxDQUFDO1FBQ3JFLHlCQUFvQixHQUEyQixJQUFJLFlBQVksRUFBWSxDQUFDO1FBSXRGLHFCQUFnQixHQUFHLEVBQUUsQ0FBQztLQXlCdkI7SUF2QkMsWUFBWSxDQUFDLEtBQWdCO1FBQzNCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFBO1FBQzFCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBQ2xELElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUN0QixNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFBO1lBQ2xELElBQUksQ0FBQyxnQkFBZ0I7Z0JBQ25CLGdCQUFnQixLQUFLLENBQUM7b0JBQ3BCLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk7b0JBQzVCLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixpQkFBaUIsQ0FBQTtTQUMzQzthQUFNO1lBQ0wsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEVBQUUsQ0FBQTtZQUMxQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUE7U0FDdEI7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQTtRQUMzQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUE7SUFDdkIsQ0FBQztJQUVELGNBQWM7UUFDWixJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFBO0lBQzVDLENBQUM7OzRGQXZDVSxzQkFBc0I7MkRBQXRCLHNCQUFzQjs7Ozs7OztRQWhEL0IsK0JBQThCO1FBQUEsWUFBZTtRQUFBLGlCQUFPO1FBQ3BELGlDQVFFO1FBSEEseUpBQVMsV0FBaUIsSUFBQztRQUczQiw0QkFBTTtRQUFBLFlBQXNCO1FBQUEsaUJBQU87UUFDbkMsbUNBUUY7UUFGSSwwR0FBVSxxQ0FBaUMsSUFBQztRQU45QyxpQkFRRjtRQUFBLGlCQUFTO1FBQ1QsNkVBVUU7UUFFRiwrQkFBOEI7UUFBQSxZQUFzQjtRQUFBLGlCQUFPO1FBQzNELCtFQU9JOztRQXZDMEIsZUFBZTtRQUFmLG1DQUFlO1FBRzNDLGVBQThCO1FBQTlCLGdEQUE4QjtRQUk5QixrREFBb0M7UUFFOUIsZUFBc0I7UUFBdEIsMENBQXNCO1FBSzFCLGVBQXdCO1FBQXhCLDBDQUF3QixvQ0FBQTtRQVkxQixlQUF3QjtRQUF4QiwyQ0FBd0I7UUFLSSxlQUFzQjtRQUF0QiwwQ0FBc0I7UUFNakQsZUFBeUQ7UUFBekQsZ0ZBQXlEOztrREFXbkQsc0JBQXNCO2NBbkRsQyxTQUFTO2VBQUM7Z0JBQ1QsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMkNUO2dCQUNELE1BQU0sRUFBRTtvQkFDTixxREFBcUQ7b0JBQ3JELCtFQUErRTtpQkFDaEY7YUFDRjs7a0JBRUUsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsS0FBSzs7a0JBQ0wsTUFBTTs7a0JBQ04sTUFBTTs7a0JBRU4sU0FBUzttQkFBQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgRWxlbWVudFJlZixcclxuICBFdmVudEVtaXR0ZXIsXHJcbiAgSW5wdXQsXHJcbiAgT3V0cHV0LFxyXG4gIFZpZXdDaGlsZCxcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdtYXQtZmlsZS11cGxvYWQnLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8c3BhbiBjbGFzcz1cImZpbGUtaW5wdXQtdGV4dFwiPnt7IGxhYmVsVGV4dCB9fTwvc3Bhbj5cclxuICAgIDxidXR0b25cclxuICAgICAgbWF0LWJ1dHRvblxyXG4gICAgICBbdHlwZV09XCJzZWxlY3RGaWxlc0J1dHRvblR5cGVcIlxyXG4gICAgICBjb2xvcj1cInByaW1hcnlcIlxyXG4gICAgICBjbGFzcz1cImZpbGUtaW5wdXQtYnV0dG9uXCJcclxuICAgICAgKGNsaWNrKT1cImZpbGVJbnB1dC5jbGljaygpXCJcclxuICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJzZWxlY3RCdXR0b25UZXh0XCJcclxuICAgID5cclxuICAgICAgPHNwYW4+e3sgc2VsZWN0QnV0dG9uVGV4dCB9fTwvc3Bhbj5cclxuICAgICAgPGlucHV0XHJcbiAgICAgICAgI2ZpbGVJbnB1dFxyXG4gICAgICAgIHR5cGU9XCJmaWxlXCJcclxuICAgICAgICBzdHlsZT1cImRpc3BsYXk6IG5vbmVcIlxyXG4gICAgICAgIFthY2NlcHRdPVwiYWNjZXB0ZWRUeXBlc1wiXHJcbiAgICAgICAgW211bHRpcGxlXT1cImFsbG93TXVsdGlwbGVGaWxlc1wiXHJcbiAgICAgICAgKGNoYW5nZSk9XCJmaWxlc0NoYW5nZWQoJGV2ZW50LnRhcmdldC5maWxlcylcIlxyXG4gICAgICAvPlxyXG4gICAgPC9idXR0b24+XHJcbiAgICA8YnV0dG9uXHJcbiAgICAgIG1hdC1yYWlzZWQtYnV0dG9uXHJcbiAgICAgIFt0eXBlXT1cInVwbG9hZEJ1dHRvblR5cGVcIlxyXG4gICAgICBjb2xvcj1cInByaW1hcnlcIlxyXG4gICAgICBjbGFzcz1cImZpbGUtaW5wdXQtYnV0dG9uXCJcclxuICAgICAgW2Rpc2FibGVkXT1cIiFzZWxlY3RlZEZpbGVzXCJcclxuICAgICAgKGNsaWNrKT1cInVwbG9hZEZpbGVzKClcIlxyXG4gICAgICAqbmdJZj1cInNob3dVcGxvYWRCdXR0b25cIlxyXG4gICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cInVwbG9hZEJ1dHRvblRleHRcIlxyXG4gICAgPlxyXG4gICAgICB7eyB1cGxvYWRCdXR0b25UZXh0IH19XHJcbiAgICA8L2J1dHRvbj5cclxuICAgIDxzcGFuIGNsYXNzPVwiZmlsZS1pbnB1dC10ZXh0XCI+e3sgc2VsZWN0ZWRGaWxlVGV4dCB9fTwvc3Bhbj5cclxuICAgIDxidXR0b25cclxuICAgICAgbWF0LWljb24tYnV0dG9uXHJcbiAgICAgIChjbGljayk9XCJmaWxlc0NoYW5nZWQobnVsbClcIlxyXG4gICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgYXJpYS1sYWJlbD1cIlJlbW92ZSBTZWxlY3RlZCBGaWxlKHMpXCJcclxuICAgICAgICpuZ0lmPVwic2VsZWN0ZWRGaWxlcyAhPSBudWxsICYmIHNlbGVjdGVkRmlsZXMubGVuZ3RoID4gMFwiXHJcbiAgICA+XHJcbiAgICAgICAgPG1hdC1pY29uICpuZ0lmPVwiIWN1c3RvbVN2Z0ljb25cIj5jbG9zZTwvbWF0LWljb24+XHJcbiAgICAgICAgPG1hdC1pY29uICpuZ0lmPVwiY3VzdG9tU3ZnSWNvblwiIFtzdmdJY29uXT1cImN1c3RvbVN2Z0ljb25cIj48L21hdC1pY29uPlxyXG4gICAgPC9idXR0b24+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtcclxuICAgICcuZmlsZS1pbnB1dC1idXR0b24geyBtYXJnaW4tcmlnaHQ6IDhweCAhaW1wb3J0YW50IH0nLFxyXG4gICAgJy5maWxlLWlucHV0LXRleHQgeyBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDsgbWFyZ2luLXJpZ2h0OiA4cHggIWltcG9ydGFudCB9JyxcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTWF0RmlsZVVwbG9hZENvbXBvbmVudCB7XHJcbiAgQElucHV0KCkgbGFiZWxUZXh0ID0gJ1NlbGVjdCBGaWxlKHMpJztcclxuICBASW5wdXQoKSBzZWxlY3RCdXR0b25UZXh0ID0gJ1NlbGVjdCBGaWxlKHMpJztcclxuICBASW5wdXQoKSBzZWxlY3RGaWxlc0J1dHRvblR5cGU6ICdidXR0b24nIHwgJ21lbnUnIHwgJ3Jlc2V0JyB8ICdzdWJtaXQnID0gJ2J1dHRvbic7XHJcbiAgQElucHV0KCkgdXBsb2FkQnV0dG9uVGV4dCA9ICdVcGxvYWQgRmlsZShzKSc7XHJcbiAgQElucHV0KCkgdXBsb2FkQnV0dG9uVHlwZTogJ2J1dHRvbicgfCAnbWVudScgfCAncmVzZXQnIHwgJ3N1Ym1pdCcgPSAnYnV0dG9uJztcclxuICBASW5wdXQoKSBhbGxvd011bHRpcGxlRmlsZXMgPSBmYWxzZTtcclxuICBASW5wdXQoKSBzaG93VXBsb2FkQnV0dG9uID0gdHJ1ZTtcclxuICBASW5wdXQoKSBhY2NlcHRlZFR5cGVzID0gJyouKic7XHJcbiAgQElucHV0KCkgY3VzdG9tU3ZnSWNvbj86IHN0cmluZyA9IG51bGw7XHJcbiAgQE91dHB1dCgpIHVwbG9hZENsaWNrZWQ6IEV2ZW50RW1pdHRlcjxGaWxlTGlzdD4gPSBuZXcgRXZlbnRFbWl0dGVyPEZpbGVMaXN0PigpO1xyXG4gIEBPdXRwdXQoKSBzZWxlY3RlZEZpbGVzQ2hhbmdlZDogRXZlbnRFbWl0dGVyPEZpbGVMaXN0PiA9IG5ldyBFdmVudEVtaXR0ZXI8RmlsZUxpc3Q+KCk7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ2ZpbGVJbnB1dCcpIGZpbGVJbnB1dFJlZjogRWxlbWVudFJlZlxyXG4gIHNlbGVjdGVkRmlsZXM6IEZpbGVMaXN0O1xyXG4gIHNlbGVjdGVkRmlsZVRleHQgPSAnJztcclxuXHJcbiAgZmlsZXNDaGFuZ2VkKGZpbGVzPzogRmlsZUxpc3QpOiB2b2lkIHtcclxuICAgIHRoaXMuc2VsZWN0ZWRGaWxlcyA9IGZpbGVzXHJcbiAgICB0aGlzLnNlbGVjdGVkRmlsZXNDaGFuZ2VkLmVtaXQodGhpcy5zZWxlY3RlZEZpbGVzKVxyXG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRGaWxlcykge1xyXG4gICAgICBjb25zdCBudW1TZWxlY3RlZEZpbGVzID0gdGhpcy5zZWxlY3RlZEZpbGVzLmxlbmd0aFxyXG4gICAgICB0aGlzLnNlbGVjdGVkRmlsZVRleHQgPVxyXG4gICAgICAgIG51bVNlbGVjdGVkRmlsZXMgPT09IDFcclxuICAgICAgICAgID8gdGhpcy5zZWxlY3RlZEZpbGVzWzBdLm5hbWVcclxuICAgICAgICAgIDogYCR7bnVtU2VsZWN0ZWRGaWxlc30gZmlsZXMgc2VsZWN0ZWRgXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnNlbGVjdGVkRmlsZVRleHQgPSAnJ1xyXG4gICAgICB0aGlzLnJlc2V0RmlsZUlucHV0KClcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVwbG9hZEZpbGVzKCk6IHZvaWQge1xyXG4gICAgdGhpcy51cGxvYWRDbGlja2VkLmVtaXQodGhpcy5zZWxlY3RlZEZpbGVzKVxyXG4gICAgdGhpcy5yZXNldEZpbGVJbnB1dCgpXHJcbiAgfVxyXG5cclxuICByZXNldEZpbGVJbnB1dCgpOiB2b2lkIHtcclxuICAgIHRoaXMuZmlsZUlucHV0UmVmLm5hdGl2ZUVsZW1lbnQudmFsdWUgPSAnJ1xyXG4gIH1cclxufVxyXG4iXX0=